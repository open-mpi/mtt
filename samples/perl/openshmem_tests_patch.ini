shmem_2dheat_patch = <<EOF
312a313,329
>   if (U_Curr)
>   {
>       if (U_Curr[0])
>       {
>         free(U_Curr[0]);
>       }
> 	  free(U_Curr);
>   }
>   
>   if (U_Next)
>   {
>       if (U_Next[0])
>       {
>         free(U_Next[0]);
>       }
> 	  free(U_Next);
>   }
352a370,374
>   if ( !U_Curr_Above || !U_Curr_Below || !U_Send_Buffer)
>   {
>     printf("error: shmalloc returned NULL (no memory)");
>     exit(1);
>   }
427a450,462
>     
>     if (U_Send_Buffer)
>     {
>         shfree(U_Send_Buffer);
>     }
>     if (U_Curr_Above)
>     {
>         shfree(U_Curr_Above);
>     }
>     if (U_Curr_Below)
>     {
>         shfree(U_Curr_Below);
>     }
441a477,482
>   
>   if ( !U_Curr_Above || !U_Curr_Below || !U_Send_Buffer)
>   {
>     printf("error: shmalloc returned NULL (no memory)");
>     exit(1);
>   }
578a620,632
>     
>     if (U_Send_Buffer)
>     {
>         shfree(U_Send_Buffer);
>     }
>     if (U_Curr_Above)
>     {
>         shfree(U_Curr_Above);
>     }
>     if (U_Curr_Below)
>     {
>         shfree(U_Curr_Below);
>     }
593a648,653
>   
>   if ( !U_Curr_Above || !U_Curr_Below || !U_Send_Buffer)
>   {
>     printf("error: shmalloc returned NULL (no memory)");
>     exit(1);
>   }
730a791,803
>     
>     if (U_Send_Buffer)
>     {
>         shfree(U_Send_Buffer);
>     }
>     if (U_Curr_Above)
>     {
>         shfree(U_Curr_Above);
>     }
>     if (U_Curr_Below)
>     {
>         shfree(U_Curr_Below);
>     }
827c900
<   for (j = start; j < end; j++)
---
>   for (j = start; j <= end; j++)
EOF

shmem_zeroget_patch = <<EOF
65,71c65,71
<   short src1[N];
<   int src2[N];
<   long src3[N];
<   long double src4[N];
<   long long src5[N];
<   double src6[N];
<   float src7[N];
---
>   static short src1[N];
>   static int src2[N];
>   static long src3[N];
>   static long double src4[N];
>   static long long src5[N];
>   static double src6[N];
>   static float src7[N];
108c108
<     src8 = (char *)malloc(N*sizeof(char));
---
>     src8 = (char *)shmalloc(N*sizeof(char));
134c134
<     dest8 = (char *)shmalloc( 4 * sizeof(*dest8) );
---
>     dest8 = (char *)shmalloc( N * sizeof(*dest8) );
EOF
