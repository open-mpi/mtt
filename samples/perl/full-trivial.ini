# Copyright (c) 2006-2009 Cisco Systems, Inc.  All rights reserved.
#
# Sample trivial INI file.  Good for organizations who want to test
# absolute basic Open MPI functionality on their platforms.
#
# See the lines marked with "CUSTOM" to edit for your environment.
#

[MTT]
description = Platform LSF Open MPI testing
# CUSTOM: remove this "trial = 1" line when ready
trial = 1

# CUSTOM: Uncomment / set these if you need to use explicit proxies in
# your environment
#http_proxy = http://whatever.example.com:8080
#ftp_proxy = http://whatever.example.com:8080
#https_proxy = http://whatever.example.com:8080

#======================================================================
# MPI get phase
#======================================================================

[MPI get: ompi-nightly-trunk]
mpi_details = OMPI

module = OMPI_Snapshot
ompi_snapshot_url = http://www.open-mpi.org/nightly/trunk
# PLATFORM: this file should be outside of the "scratch" tree -- e.g.,
# under $HOME/mtt-versions/, or somesuch.  The directory does not need
# to exist before you run for the first time (it'll be created)
ompi_snapshot_version_file = &getenv("HOME")/mtt-versions/trunk.txt

#----------------------------------------------------------------------

[MPI get: ompi-nightly-v1.3]
mpi_details = OMPI

module = OMPI_Snapshot
ompi_snapshot_url = http://www.open-mpi.org/nightly/v1.3
# CUSTOM: should probably be the same directory (but different
# filename!) as the "trunk" section, above.
ompi_snapshot_version_file = &getenv("HOME")/mtt-versions/v1.3.txt

#======================================================================
# Install MPI phase
#======================================================================

[MPI install: Platform]
mpi_get = ompi-nightly-v1.3,ompi-nightly-trunk
save_stdout_on_success = 1
merge_stdout_stderr = 0

module = OMPI
ompi_vpath_mode = none
# CUSTOM: OMPI supports parallel builds; you may want to tweak the j
# value up or down, depending on your IO environment.
ompi_make_all_arguments = -j 4
ompi_make_check = 1
ompi_compiler_name = gnu
ompi_compiler_version = &get_gcc_version()
# CUSTOM: Tweak this configuration line as necessary to specify what
# is relevant for your environment.  The lines between the EOT markers
# will be squashed into a single line before running.
ompi_configure_arguments = <<EOT
"CFLAGS=-g -pipe" --enable-debug --enable-mpirun-prefix-by-default 
--disable-dlopen
EOT

#======================================================================
# MPI run details
#======================================================================

[MPI Details: OMPI]
exec = mpirun -np &test_np() &test_executable() &test_argv()
parameters = &MPI::OMPI::find_mpirun_params(&test_command_line(), \
                                           &test_executable())
network = &MPI::OMPI::find_network(&test_command_line(), &test_executable())

#======================================================================
# Test get phase
#======================================================================

[Test get: trivial]
module = Trivial

#======================================================================
# Test build phase
#======================================================================

[Test build: trivial]
test_get = trivial
save_stdout_on_success = 1
merge_stdout_stderr = 1

module = Trivial

#======================================================================
# Test Run phase
#======================================================================

[Test run: trivial]
test_build = trivial
pass = &and(&test_wifexited(), &eq(&test_wexitstatus(), 0))
skipped = 0
timeout = &max(10, &test_np())
save_stdout_on_pass = 1
merge_stdout_stderr = 1
stdout_save_lines = 50
stderr_save_lines = 100
np = &env_max_procs()

specify_module = Simple
simple_first:tests = &find_executables(".")

#======================================================================
# Reporter phase
#======================================================================

[Reporter: OMPI community database]
module = MTTDatabase

mttdatabase_realm = OMPI
# CUSTOM: Set with your username
mttdatabase_username = platform
# CUSTOM: Change this path or hard-code the password
mttdatabase_password = &shell("cat /home/ompitest/mtt-platform-db-password.txt")
# CUSTOM: Fill in a relevant platform name here
mttdatabase_platform = RHEL 4u7, x86_64
mttdatabase_hostname = &shell("hostname")
mttdatabase_url = https://www.open-mpi.org/mtt/submit/
mttdatabase_debug_filename = mttdb_debug_file
mttdatabase_keep_debug_files = 1
mttdatabase_debug_server = 1
