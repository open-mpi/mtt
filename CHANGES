-*- text -*-

To announce to OMPI core testers:

- New funclets:
    - &hostlist - not new but 2 new parameters were added: 
        $1 - delimiter that used between hostnames 
        $2 - number of hosts that we want to get from the list
    - &perl(): MANY more things are possible now!
    - &regexp()
    - &check_ipoib_connectivity()
    - ?&check_ib_connectivty()?
    - &verbose(), &debug(), &print()
    - &env_hosts() can be uniq-ified
    - &SSH::refresh_ssh_known_hosts_file() - updates a stale
      ~/.ssh/known_hosts file. CAUTION: use of this funclet
      is only advisable in unstable (yet secure)
      environments (e.g., lab networks).
    - &scratch_root() returns the directory name of the scratch tree
    - &strstr(), like strstr(3)
    - &preq_replace(), like
      http://www.php.net/manual/en/function.preg-replace.php
    - &MPI::OMPI::find_mpirun_params() and &MPI::OMPI::find_network()
    - &get_version() for the below MPIs:
      - &MPI::OMPI::get_version()
      - &MPI::HPMPI::get_version()
      - &MPI::CrayMPI::get_version()
      - &MPI::IntelMPI::get_version()
      - &MPI::ScaliMPI::get_version()
    - &MPI::OMPI::get_mpicc_compiler_name() - get compiler version found in 
      ompi_info "C absolute compiler"
    - &MPI::OMPI::get_mpicc_compiler_version() - get compiler name found in 
      ompi_info "C absolute compiler"
    - &test_command_line()
    - &split() now takes optional 2nd param to specify token
    - &find(regexp, directory list)
    - &rm_name() -- close to, but slightly different than &env_name()
    - &prime(min,max) - return prime numbers between min and max
    - &env_max_hosts()
    - &get_<compiler>_version() funclets now take optional parameter
      specifying the argv[0] to use.
    - &current_phase() - returns name of currently executing phase (e.g., "MPI
      install")
    - &current_section() - returns the name of currently executing INI section
      (e.g., "Test build: intel")
    - &pwd() - like the shell command of the same name
    - &cwd() - alias for &pwd()
    - &which() - like the shell command of the same name
    - &get_mpi_get_names() - return a csv list of all cached MPI get names
                             matching a pattern
    - &SVN::get_r_number() - return the revision number of an SVN workspace
    - &search_and_replace() - perform a search and replace
                              operation on a specified file
    - &mpi_details() - pass arbitrary values from test run sections
                       to the mpi details section, indexed by string
    - &get_processor_count() - return the number of CPUs on the localhost
    - &vampir_trace_files_exist() - return true if VampirTrace trace files
      are found in the cwd()
    - &random_string(n) - return a random string "n" characters long
    - &temp_filename() - call File::Temp::tempfile() and return the filename
    - &increment(n) - increment the integer or character by "n"
    - &decrement(n) - decrement the integer or character by "n"
    - &get_compiler_vendor() - Determine the compiler vendor using
                               predefined compiler C macros
    - &cmd_pid() - return pid of last DoCommand::Cmd

- Allow mpi_get_name, test_get_name, and test_build_name fields to
  accept the special value "all", meaning that they'll use all
  corresponding sections that are found (vs. needing to list every
  section explicitly)

- Added export for MTT_TEST_EXECUTABLE, may be used for clean up after
  mpi process : pkill -9 $MTT_TEST_EXECUTABLE

- See https://svn.open-mpi.org/trac/mtt/changeset/863:
  - re-wrote funclet parser; MUST edit INI file and remove excess
    quoting
  - new MPI details fields: launcher, parameters, network,
    resource_manager
  - Can escape &, ', " in INI files

- Added optional delimiter parameter to &hostlist() and &hostlist_hosts()

- --section: beware of section names with spaces!  s/ /./g in --section
    arguments if you have spaces in your section names.

- --clean-start: remove MTT sources, installations, and metadata out of
    the scratch directory before running

- --print-cmd-time: Display the amount of time taken in each command
- --print-phases-time: Display the amount of time taken in each phase
- --print-time|-p: Alias for --print-phases-time --print-cmd-time

- @variable@ expansion *everywhere* in ini files (not just in "exec")

- MTT lock server.

- MTT IRC reporter.

- SCM module with the below backend scm_module's:
  - SVN
  - SVK
  - Mercurial
  - Unknown (basically run a shell command)
  --> Users will get warnings but the old "SVN" module will still work
  --> Users encouraged to convert to the new SCM module

- terminate_files field in MTT section.  Defaults to $HOME/mtt-stop
  and &scratch_root()/mtt-stop.  Causes MTT to stop after the current
  test and report all of its results.

- pause_files field in MTT section.  Defaults to $HOME/mtt-pause and
  &scratch_root()/mtt-pause.  Causes MTT to "pause" after the current
  test.  MTT will resume once the pause file has been removed.

- delete_fast_scratch field in MTT section.  Defaults to 1, but can be
  overridden to 0.  If 1, the "fast scratch" tree will be completely
  removed at the end of the run.

- save_fast_scratch_files field in the MTT section.  A comma-delimited
  list of files that are saved from the fast scratch area before it is
  deleted.

- Added support for MPICH2 (and therefore MVAPICH2) and LAM/MPI

- Added support for the ClusterTools package installer

- Renamed the MPI install phase field names:
  compiler_name -> ompi_compiler_name (etc.)
  Need to check for backward compatibility

- Fix the mpi_details logic. We now follow 5 specific steps to look for 
  the Right MPI Details section to use: 

  1. Look for an mpi_details field in the current MPI Install phase
     that matches a valid MPI Details section
  2. Look for an mpi_details field in the current MPI Get phase that
     matches a valid MPI Details section
  3. Look for an mpi_install field is any MPI Details section that
     matches the current MPI Install phase
  4. Look for an mpi_get field is any MPI Details section that matches
     the current MPI Get phase
  5. If we didn't find anything above, take the first MPI Details
     section we find

- Cluster description strings for the below fields can be overridden
  in the [MPI Install] and [MTT] INI sections
  - platform_type
  - platform_hardware
  - os_name
  - os_version

- Added "description" field in MTT, MPI install, Test build, and Test
  run sections.  If not set in MPI Install/Test build/Test run
  sections, will use the value from the MTT section.

- Added "log_file" field in [MTT] section

- Added "funclet_files" field into [MTT] section, allowing a
  comma-delimited list of .pm files to add more funclets to MTT.

- Allow timeouts to be specified in [HH:[MM:]]SS format in the ini file.

- before_any, before_each, after_any, and after_each steps can be set to
  funclets

- Added "INI_NAME" as a predefined INI parameter (a la Perl's $PROGRAM_NAME)

- Added "PROGRAM_NAME" as a predefined INI parameter (a la Perl's
  $PROGRAM_NAME)

- Added several performance stdout analyzers:
  - NBC Bench
  - OSU benchmarks
  - SKaMPI
  - IMB
  - NetPIPE

- Added include_section. include_section takes a CSV of INI section names and
  interpolates those sections into the current INI section, allowing the user
  to factor down an INI file. Note: --section filtering is performed *after*
  the interpolation, so there is no need to supply "include" sections to the 
  --section option. (See samples/perl/ompi-core-template.ini for examples)

- New options:
  - --no-force
  - --no-reporter
  - --fast-scratch (currently used by the MPI install section)

- New MPI install INI params used to do *stuff* before and/or after an MPI
  Install (e.g., create a tarball, install on cluster):
  - before_install
  - before_install_timeout
  - after_install
  - after_install_timeout

- GNU Install before/after step parameters
  - before_configure
  - after_configure
  - before_make_all
  - after_make_all
  - before_make_check
  - after_make_check
  - before_make_install
  - after_make_install

- include_file(s) INI parameter - just like pre-processor "#include"
  directives

- trivial_tests_languages - comma separated list of languages to use
  for trivial tests (default: "c,c++,f77,f90").
- trivial_tests_mpicc - override default mpicc for Trivial test build
- trivial_tests_mpicxx - override default mpicxx for Trivial test build
- trivial_tests_mpif77 - override default mpif77 for Trivial test build
- trivial_tests_mpif90 - override default mpif90 for Trivial test build

- added parameter to Simple specify module: do_not_run.  If set to 1
  for a specific subsection (and the subsection is exclusive), then
  those tests will not be run.  Handy for explicitly specifying tests
  that exist but should *not* be run.

- added parameter alreadyinstalled_mpi_type.  Defaults to "OMPI", but
  can also be "MVAPICH".

- Added Functions::MPI::MVAPICH.pm.

- Added "skip_section" INI parameter. If it evaluates to true, the section
  is skipped.

- Added the below "threshold" INI parameters for Test run sections. Acceptable
  in the following formats where "D" is an integer: D% (percentage), D/D
  fraction, .D (decimal), and DD (integer count of number of tests). The first
  thershold to break, *breaks* out of the RunEngine loop of mpirun commands.
  - break_threshold_pass
  - break_threshold_fail
  - break_threshold_skipped
  - break_threshold_timeout

- Test run INI parameters
  - submit_results_after_each INI parameter - directs MTT to submit results after
    each test. (Useful to ensure *some* test results get submitted in case the
    scheduler kills the MTT run.)
  - submit_results_after_n_results - directs MTT to submit results after
    "n" tests

- "sge" aliases for "n1ge" funclets
  - sge_job
  - sge_max_procs
  - sge_hosts

- Accept the below environment INI params in Reporter sections:
  - setenv
  - unsetenv
  - prepend_path
  - append_path

- MTTDatabase now respects the TMPDIR environment variable

- Added intel_ompi_tests_make_arguments

- Added "disk_free_min" to [MTT] section - pause MTT progress if free disk
  space falls below a certain percentage (e.g., 5%) 
- Added "disk_free_min_wait" to [MTT] section - number of minutes to wait for
  the user to remedy the situation if the "disk_free_min" threshold is broken

- Added env_importer. Works similarly to env_module, only it accepts shell
  environment importer files (sh, bash, csh, sh, ksh, zsh, and tcsh)

- Timeout notification
  - docommand_timeout_notify_file - file name to touch and check while waiting
    for user to investigate a possibly hanging test 
  - docommand_timeout_notify_email - CSV of email receipients to send timeout
    notification to
  - docommand_timeout_notify_timeout - time to wait for user to remove "notify
    file" before moving on to other tests

- docommand_timeout_backtrace_program - use either "padb" or "gdb" to collect
  stack traces of timed out tests
